Você tem três versões diferentes do componente de QR code:

O QRCodeDisplay.jsx (que é o código que compartilhei)
O QRCodeDisplay.tsx (versão TypeScript com tratamento robusto de erros)
O QRCodeModal.tsx (um modal para exibir o QR code)
Você não precisa ter todos eles. Na verdade, o ideal é escolher apenas uma implementação para evitar duplicação de código. Vamos analisar qual seria a melhor opção:

A segunda versão (QRCodeDisplay.tsx) parece ser a mais completa e robusta. Ela tem:

Tratamento de erros mais avançado
Limpeza de caracteres problemáticos no base64
Interface TypeScript bem definida
Fallback para QRCodeCanvas quando a imagem falha
Recomendação:

Mantenha apenas o QRCodeDisplay.tsx - Esta versão TypeScript é a mais robusta e já tem todo o tratamento necessário.

Atualize apenas esta parte do código na função que formata os dados:

// Na função useEffect do QRCodeDisplay.tsx, modifique esta parte:
useEffect(() => {
  if (!qrCodeData) return;
  
  try {
    // Verificamos qual formato de QR code foi recebido
    if (isImage) {
      // Se já tem prefixo de data:image, utilizamos como está
      if (qrCodeData.startsWith('data:image')) {
        setFormattedData(qrCodeData);
      } else {
        // Limpeza de caracteres potencialmente problemáticos no início e fim do base64
        let cleanBase64 = qrCodeData.trim().replace(/^[^A-Za-z0-9+/=]+|[^A-Za-z0-9+/=]+$/g, '');
        // Garantimos que o prefixo data:image/png;base64, seja adicionado 
        setFormattedData(`data:image/png;base64,${cleanBase64}`);
      }
    } else {
      // Se for dados de texto para gerar QR, simplesmente passamos o valor
      setFormattedData(qrCodeData);
    }
  } catch (error) {
    console.error("Erro ao formatar dados do QR code:", error);
    setHasError(true);
  }
}, [qrCodeData, isImage]);
Adicione logs para debugar mais facilmente:
useEffect(() => {
  console.log("QRCodeDisplay - Dados recebidos:", { 
    qrCodeData: qrCodeData?.substring(0, 30) + "...",  
    isImage, 
    dataLength: qrCodeData?.length || 0
  });
  
  // resto do código...
}, [qrCodeData, isImage]);
Mantenha o QRCodeModal.tsx se precisar exibir o QR code em um modal de diálogo.
Quanto ao serviço que obtém o QR code, utilize a versão atualizada que forneci anteriormente, com o QR code de teste válido.

Dessa forma, você terá uma solução consistente e robusta para exibição de QR codes, mantendo apenas os arquivos necessários.