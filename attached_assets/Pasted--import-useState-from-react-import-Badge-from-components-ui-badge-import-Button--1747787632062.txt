
import { useState } from "react";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { 
  CreditCard, 
  MapPin, 
  Phone, 
  Mail, 
  Calendar,
  Tag,
  MessageSquare,
  SquarePen,
  DollarSign
} from "lucide-react";
import { ConversationItemProps } from "@/modules/Inbox/components/ConversationItem";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ScrollArea } from "@/components/ui/scroll-area";

// Interface para as informações adicionais do contato
interface ContactInfo {
  fullName: string;
  phone: string;
  email: string;
  address: string;
  joinDate: Date;
  tags: string[];
  payments: {
    id: string;
    date: Date;
    amount: number;
    status: "paid" | "pending" | "failed";
  }[];
}

// Dados de exemplo (simulando uma API)
const getContactInfo = (id: string): ContactInfo => {
  return {
    fullName: "Roberto Alves Pereira",
    phone: "+55 (11) 98765-4321",
    email: "roberto.alves@email.com",
    address: "Av. Paulista, 1000, São Paulo - SP",
    joinDate: new Date(2023, 3, 15), // 15 de abril de 2023
    tags: ["Cliente", "Premium", "E-commerce"],
    payments: [
      { id: "pay_123", date: new Date(2023, 10, 5), amount: 599.90, status: "paid" },
      { id: "pay_124", date: new Date(2023, 9, 1), amount: 299.50, status: "paid" },
      { id: "pay_125", date: new Date(2023, 8, 2), amount: 1299.00, status: "pending" },
    ]
  };
};

interface ContactPanelProps {
  conversation: ConversationItemProps;
}

export const ContactPanel = ({ conversation }: ContactPanelProps) => {
  const [activeTab, setActiveTab] = useState("info");
  const contact = getContactInfo(conversation.id);

  // Função para formatar valores monetários
  const formatCurrency = (value: number): string => {
    return new Intl.NumberFormat('pt-BR', {
      style: 'currency',
      currency: 'BRL'
    }).format(value);
  };

  return (
    <div className="h-full flex flex-col overflow-hidden">
      {/* Cabeçalho do contato */}
      <div className="p-4 border-b">
        <div className="flex flex-col items-center mb-4">
          <div className="w-16 h-16 rounded-full bg-muted flex items-center justify-center mb-2">
            {conversation.avatar ? (
              <img 
                src={conversation.avatar} 
                alt={conversation.name} 
                className="w-full h-full rounded-full object-cover"
              />
            ) : (
              <span className="text-2xl font-medium">
                {conversation.name.charAt(0)}
              </span>
            )}
          </div>
          <h2 className="text-lg font-semibold">{contact.fullName}</h2>
          <div className="flex items-center mt-1">
            <div className={`h-2 w-2 rounded-full mr-1 ${
              conversation.channel === 'whatsapp' 
                ? 'bg-green-500' 
                : conversation.channel === 'instagram' 
                  ? 'bg-pink-500' 
                  : conversation.channel === 'facebook' 
                    ? 'bg-blue-600' 
                    : 'bg-yellow-500'}`}>
            </div>
            <span className="text-sm text-muted-foreground">
              Cliente desde {new Date(contact.joinDate).toLocaleDateString()}
            </span>
          </div>
        </div>

        <div className="flex justify-center space-x-2">
          <Button variant="outline" size="sm" className="flex items-center">
            <Phone className="h-4 w-4 mr-1" />
            <span>Ligar</span>
          </Button>
          <Button variant="outline" size="sm" className="flex items-center">
            <SquarePen className="h-4 w-4 mr-1" />
            <span>Editar</span>
          </Button>
        </div>
      </div>

      {/* Informações do contato em abas */}
      <Tabs defaultValue="info" value={activeTab} onValueChange={setActiveTab} className="flex-1 flex flex-col">
        <TabsList className="grid grid-cols-3">
          <TabsTrigger value="info">Informações</TabsTrigger>
          <TabsTrigger value="history">Histórico</TabsTrigger>
          <TabsTrigger value="ai">IA</TabsTrigger>
        </TabsList>

        <ScrollArea className="flex-1">
          <TabsContent value="info" className="p-4 h-full">
            {/* Informações básicas */}
            <div className="space-y-4">
              <div>
                <h3 className="text-sm font-medium mb-2">Contato</h3>
                <div className="space-y-2">
                  <div className="flex items-center text-sm">
                    <Phone className="h-4 w-4 mr-2 text-muted-foreground" />
                    <span>{contact.phone}</span>
                  </div>
                  <div className="flex items-center text-sm">
                    <Mail className="h-4 w-4 mr-2 text-muted-foreground" />
                    <span>{contact.email}</span>
                  </div>
                </div>
              </div>

              <div>
                <h3 className="text-sm font-medium mb-2">Endereço</h3>
                <div className="flex items-start text-sm">
                  <MapPin className="h-4 w-4 mr-2 text-muted-foreground mt-0.5" />
                  <span>{contact.address}</span>
                </div>
              </div>

              <div>
                <h3 className="text-sm font-medium mb-2">Tags</h3>
                <div className="flex flex-wrap gap-1">
                  {contact.tags.map((tag, index) => (
                    <Badge variant="outline" key={index}>
                      <Tag className="h-3 w-3 mr-1" />
                      {tag}
                    </Badge>
                  ))}
                </div>
              </div>

              <div>
                <h3 className="text-sm font-medium mb-2">Pagamentos Recentes</h3>
                <div className="space-y-2">
                  {contact.payments.map(payment => (
                    <div 
                      key={payment.id} 
                      className="flex items-center justify-between p-2 rounded-md border text-sm"
                    >
                      <div className="flex items-center">
                        <CreditCard className="h-4 w-4 mr-2 text-muted-foreground" />
                        <span>{new Date(payment.date).toLocaleDateString()}</span>
                      </div>
                      <div className="flex items-center">
                        <span className={`mr-2 ${
                          payment.status === 'paid' 
                            ? 'text-green-500' 
                            : payment.status === 'pending' 
                              ? 'text-yellow-500' 
                              : 'text-red-500'
                        }`}>
                          {formatCurrency(payment.amount)}
                        </span>
                        <Badge 
                          variant={
                            payment.status === 'paid' 
                              ? 'default' 
                              : payment.status === 'pending' 
                                ? 'outline' 
                                : 'destructive'
                          }
                          className="text-xs"
                        >
                          {payment.status === 'paid' 
                            ? 'Pago' 
                            : payment.status === 'pending' 
                              ? 'Pendente' 
                              : 'Falhou'}
                        </Badge>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              <Button variant="outline" className="w-full">
                <DollarSign className="h-4 w-4 mr-1" />
                Ver todas as transações
              </Button>
            </div>
          </TabsContent>

          <TabsContent value="history" className="p-4">
            <div className="space-y-4">
              <h3 className="text-sm font-medium">Histórico de Interações</h3>
              
              <div className="space-y-3">
                <div className="border rounded-md p-3">
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center">
                      <MessageSquare className="h-4 w-4 mr-2 text-muted-foreground" />
                      <span className="text-sm font-medium">Atendimento por WhatsApp</span>
                    </div>
                    <span className="text-xs text-muted-foreground">10/10/2023</span>
                  </div>
                  <p className="text-sm">Cliente solicitou informações sobre o status do pedido #1234. Informado que está em trânsito.</p>
                </div>
                
                <div className="border rounded-md p-3">
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center">
                      <CreditCard className="h-4 w-4 mr-2 text-muted-foreground" />
                      <span className="text-sm font-medium">Pagamento Realizado</span>
                    </div>
                    <span className="text-xs text-muted-foreground">01/09/2023</span>
                  </div>
                  <p className="text-sm">Pagamento de R$ 299,50 aprovado para o pedido #1235.</p>
                </div>
                
                <div className="border rounded-md p-3">
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center">
                      <MessageSquare className="h-4 w-4 mr-2 text-muted-foreground" />
                      <span className="text-sm font-medium">Atendimento por Email</span>
                    </div>
                    <span className="text-xs text-muted-foreground">15/08/2023</span>
                  </div>
                  <p className="text-sm">Cliente solicitou troca de produto danificado. Criado protocolo #87654.</p>
                </div>
              </div>
              
              <Button variant="outline" className="w-full text-sm">
                Carregar mais histórico
              </Button>
            </div>
          </TabsContent>
          
          <TabsContent value="ai" className="p-4">
            <div className="space-y-4">
              <div>
                <h3 className="text-sm font-medium mb-2">Análise de Sentimento (IA)</h3>
                <div className="border rounded-md p-3">
                  <div className="flex justify-between items-center mb-3">
                    <span className="text-sm">Confiança da análise:</span>
                    <Badge variant="outline">78%</Badge>
                  </div>
                  
                  <div className="space-y-2">
                    <div>
                      <span className="text-xs text-muted-foreground block mb-1">Palavras-chave detectadas:</span>
                      <div className="flex flex-wrap gap-1">
                        <Badge variant="secondary" className="text-xs">entrega</Badge>
                        <Badge variant="secondary" className="text-xs">pedido</Badge>
                        <Badge variant="secondary" className="text-xs">atraso</Badge>
                      </div>
                    </div>
                    
                    <div className="pt-2">
                      <span className="text-xs text-muted-foreground block mb-1">Sentimento predominante:</span>
                      <Badge>Neutro</Badge>
                    </div>
                  </div>
                </div>
              </div>
              
              <div>
                <h3 className="text-sm font-medium mb-2">Artigos Sugeridos</h3>
                <div className="space-y-2">
                  <div className="border rounded-md p-2 flex justify-between items-center">
                    <div className="flex items-center">
                      <Calendar className="h-4 w-4 mr-2 text-muted-foreground" />
                      <span className="text-sm">Como rastrear pedidos</span>
                    </div>
                    <Badge variant="outline" className="text-xs">85%</Badge>
                  </div>
                  
                  <div className="border rounded-md p-2 flex justify-between items-center">
                    <div className="flex items-center">
                      <Calendar className="h-4 w-4 mr-2 text-muted-foreground" />
                      <span className="text-sm">Política de devolução</span>
                    </div>
                    <Badge variant="outline" className="text-xs">70%</Badge>
                  </div>
                  
                  <div className="border rounded-md p-2 flex justify-between items-center">
                    <div className="flex items-center">
                      <Calendar className="h-4 w-4 mr-2 text-muted-foreground" />
                      <span className="text-sm">Prazo de entrega por região</span>
                    </div>
                    <Badge variant="outline" className="text-xs">65%</Badge>
                  </div>
                </div>
              </div>
              
              <div>
                <h3 className="text-sm font-medium mb-2">Sugestões de Resposta</h3>
                <div className="space-y-2">
                  <div className="border rounded-md p-2">
                    <p className="text-sm">Entendi sua preocupação com o atraso. Seu pedido está em trânsito e deve chegar amanhã.</p>
                  </div>
                  
                  <div className="border rounded-md p-2">
                    <p className="text-sm">Posso encaminhar um comprovante de envio por email para seu acompanhamento.</p>
                  </div>
                  
                  <div className="border rounded-md p-2">
                    <p className="text-sm">Como forma de compensar o atraso, podemos oferecer um cupom de desconto para sua próxima compra.</p>
                  </div>
                </div>
              </div>
            </div>
          </TabsContent>
        </ScrollArea>
      </Tabs>
    </div>
  );
};
